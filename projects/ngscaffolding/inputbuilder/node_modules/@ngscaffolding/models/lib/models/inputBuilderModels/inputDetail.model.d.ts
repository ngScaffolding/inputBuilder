import { BaseEntity } from '../coreModels/baseEntity.model';
import { ReferenceValueItem } from '../coreModels/referenceValue.model';
export declare class BaseInput {
    name?: string;
    label?: string;
    type?: InputTypes;
}
export declare enum InputTypes {
    null = "null",
    textbox = "textbox",
    number = "number",
    email = "email",
    password = "password",
    textarea = "textarea",
    datetime = "datetime",
    date = "date",
    time = "time",
    select = "select",
    switch = "switch",
    editor = "editor",
    listbox = "listbox",
    colourpicker = "colourpicker",
    spinner = "spinner",
    slider = "slider",
    checkbox = "checkbox",
    tricheckbox = "tricheckbox",
    tree = "tree",
    selectbutton = "selectbutton",
    togglebutton = "togglebutton",
    radio = "radio",
    radiobuttons = "radiobuttons",
    dropdown = "dropdown",
    rating = "rating",
    autocomplete = "autocomplete",
    multiselect = "multiselect",
    chips = "chips",
    keyfilter = "keyfilter",
    fileattach = "fileattach",
    dynamic = "dynamic",
    search = "search",
    repeatform = "repeatform"
}
export declare class InputDetail extends BaseEntity {
    label?: string;
    type?: InputTypes;
    placeholder?: string;
    help?: string;
    comparison?: string;
    allowcomparisonchange?: string;
    containerClass?: string;
    classes?: string;
    hidden?: boolean;
    tabindex?: number;
    readonly?: boolean;
    value?: any;
    validateRequired?: string;
    validateRequiredTrue?: string;
    validateEmail?: string;
    validatePattern?: string;
    validatePatternMessage?: string;
    validateMin?: number;
    validateMinMessage?: string;
    validateMax?: number;
    validateMaxMessage?: string;
    validateMinLength?: number;
    validateMinLengthMessage?: string;
    validateMaxLength?: number;
    validateMaxLengthMessage?: string;
}
export declare class InputDetailFile extends InputDetail {
}
export declare class InputDetailTextBox extends InputDetail {
    mask?: string;
}
export declare class InputDetailDateTime extends InputDetail {
    forceUTC: boolean;
}
export declare class InputDetailReferenceValues extends InputDetail {
    referenceValueName?: string;
    referenceValueSeedName?: string;
    referenceValueChildLevel?: number;
    datasourceItems?: Array<ReferenceValueItem>;
    referenceValueSeedDependency?: string;
}
export declare class InputDetailDropdown extends InputDetailReferenceValues {
    selectFilter?: boolean;
    selectFilterBy?: string;
    selectFilterPlaceholder?: string;
}
export declare class InputDetailToggleButton extends InputDetail {
}
export declare class InputDetailTextArea extends InputDetail {
    rows?: number;
}
export declare class InputDetailSlider extends InputDetail {
    min?: number;
    max?: number;
    step?: number;
}
export declare class InputAutoCompete extends InputDetailReferenceValues {
}
export declare class FileAttach extends InputDetail {
    accept: string;
    maxFileSize: number;
}
export declare class InputDynamic extends InputDetail {
    angularComponent?: string;
    additionalProperties?: object;
}
//# sourceMappingURL=inputDetail.model.d.ts.map