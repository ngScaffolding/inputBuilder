import { InputBuilderDefinition } from '../inputBuilderModels/inputBuilderDefinition.model';
import { BaseEntity } from './baseEntity.model';
export declare const enum ButtonColours {
    primary = "primary",
    secondary = "secondary",
    success = "success",
    info = "info",
    warning = "warning",
    danger = "danger",
    blue = "blue",
    cyan = "cyan",
    teal = "teal",
    orange = "orange",
    deeporange = "deeporange",
    purple = "purple",
    indigo = "indigo",
    pink = "pink"
}
export declare const enum ActionTypes {
    angularComponent = "angularComponent",
    dataSource = "dataSource"
}
export declare class Action extends BaseEntity {
    type?: ActionTypes;
    title?: string;
    icon?: string;
    colour?: string;
    columnButton?: boolean;
    selectionRequired?: boolean;
    flushReferenceValues?: string | Array<string>;
    multipleTarget?: boolean;
    confirmationMessage?: string;
    idField?: string;
    idValue?: string;
    entityType?: string;
    additionalProperties?: object;
    inputBuilderDefinition?: InputBuilderDefinition;
    refresh?: boolean;
    isAudit?: boolean;
    successMessage?: string;
    successToast?: boolean;
    errorMessage?: string;
    errorToast?: boolean;
    dataSourceName?: string;
    angularComponent?: string;
    dialogOptions?: DialogOptions;
    url?: string;
    target?: string;
    notificationDetailsName?: string;
}
export declare class DialogOptions {
    header?: string;
    width?: number;
    height?: number | any;
    maximizable?: boolean;
    closable?: boolean;
}
//# sourceMappingURL=action.model.d.ts.map