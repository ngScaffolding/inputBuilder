import { BaseEntity } from '../coreModels/baseEntity.model';
export class BaseInput {
}
export var InputTypes;
(function (InputTypes) {
    InputTypes["null"] = "null";
    InputTypes["textbox"] = "textbox";
    InputTypes["number"] = "number";
    InputTypes["email"] = "email";
    InputTypes["password"] = "password";
    InputTypes["textarea"] = "textarea";
    InputTypes["datetime"] = "datetime";
    InputTypes["date"] = "date";
    InputTypes["time"] = "time";
    InputTypes["select"] = "select";
    InputTypes["switch"] = "switch";
    InputTypes["editor"] = "editor";
    InputTypes["listbox"] = "listbox";
    InputTypes["colourpicker"] = "colourpicker";
    InputTypes["spinner"] = "spinner";
    InputTypes["slider"] = "slider";
    InputTypes["checkbox"] = "checkbox";
    InputTypes["tricheckbox"] = "tricheckbox";
    InputTypes["tree"] = "tree";
    InputTypes["selectbutton"] = "selectbutton";
    InputTypes["togglebutton"] = "togglebutton";
    InputTypes["radio"] = "radio";
    InputTypes["radiobuttons"] = "radiobuttons";
    InputTypes["dropdown"] = "dropdown";
    InputTypes["rating"] = "rating";
    InputTypes["autocomplete"] = "autocomplete";
    InputTypes["multiselect"] = "multiselect";
    InputTypes["chips"] = "chips";
    InputTypes["keyfilter"] = "keyfilter";
    InputTypes["fileattach"] = "fileattach";
    InputTypes["dynamic"] = "dynamic";
    InputTypes["search"] = "search";
    InputTypes["repeatform"] = "repeatform";
})(InputTypes || (InputTypes = {}));
export class InputDetail extends BaseEntity {
}
export class InputDetailFile extends InputDetail {
}
export class InputDetailTextBox extends InputDetail {
}
export class InputDetailDateTime extends InputDetail {
}
export class InputDetailReferenceValues extends InputDetail {
}
export class InputDetailDropdown extends InputDetailReferenceValues {
}
export class InputDetailToggleButton extends InputDetail {
}
export class InputDetailTextArea extends InputDetail {
}
export class InputDetailSlider extends InputDetail {
}
export class InputAutoCompete extends InputDetailReferenceValues {
}
export class FileAttach extends InputDetail {
}
export class InputDynamic extends InputDetail {
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXREZXRhaWwubW9kZWwuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmdzY2FmZm9sZGluZy9tb2RlbHMvc3JjLyIsInNvdXJjZXMiOlsibGliL21vZGVscy9pbnB1dEJ1aWxkZXJNb2RlbHMvaW5wdXREZXRhaWwubW9kZWwudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBRzVELE1BQU0sT0FBTyxTQUFTO0NBSXJCO0FBRUQsTUFBTSxDQUFOLElBQVksVUFrQ1g7QUFsQ0QsV0FBWSxVQUFVO0lBQ2xCLDJCQUFhLENBQUE7SUFDYixpQ0FBbUIsQ0FBQTtJQUNuQiwrQkFBaUIsQ0FBQTtJQUNqQiw2QkFBZSxDQUFBO0lBQ2YsbUNBQXFCLENBQUE7SUFDckIsbUNBQXFCLENBQUE7SUFDckIsbUNBQXFCLENBQUE7SUFDckIsMkJBQWEsQ0FBQTtJQUNiLDJCQUFhLENBQUE7SUFDYiwrQkFBaUIsQ0FBQTtJQUNqQiwrQkFBaUIsQ0FBQTtJQUNqQiwrQkFBaUIsQ0FBQTtJQUNqQixpQ0FBbUIsQ0FBQTtJQUNuQiwyQ0FBNkIsQ0FBQTtJQUM3QixpQ0FBbUIsQ0FBQTtJQUNuQiwrQkFBaUIsQ0FBQTtJQUNqQixtQ0FBcUIsQ0FBQTtJQUNyQix5Q0FBMkIsQ0FBQTtJQUMzQiwyQkFBYSxDQUFBO0lBQ2IsMkNBQTZCLENBQUE7SUFDN0IsMkNBQTZCLENBQUE7SUFDN0IsNkJBQWUsQ0FBQTtJQUNmLDJDQUE2QixDQUFBO0lBQzdCLG1DQUFxQixDQUFBO0lBQ3JCLCtCQUFpQixDQUFBO0lBQ2pCLDJDQUE2QixDQUFBO0lBQzdCLHlDQUEyQixDQUFBO0lBQzNCLDZCQUFlLENBQUE7SUFDZixxQ0FBdUIsQ0FBQTtJQUN2Qix1Q0FBeUIsQ0FBQTtJQUN6QixpQ0FBbUIsQ0FBQTtJQUNuQiwrQkFBaUIsQ0FBQTtJQUNqQix1Q0FBeUIsQ0FBQTtBQUM3QixDQUFDLEVBbENXLFVBQVUsS0FBVixVQUFVLFFBa0NyQjtBQUNELE1BQU0sT0FBTyxXQUFZLFNBQVEsVUFBVTtDQXFDMUM7QUFFRCxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxXQUFXO0NBQUc7QUFFbkQsTUFBTSxPQUFPLGtCQUFtQixTQUFRLFdBQVc7Q0FFbEQ7QUFFRCxNQUFNLE9BQU8sbUJBQW9CLFNBQVEsV0FBVztDQUVuRDtBQUVELE1BQU0sT0FBTywwQkFBMkIsU0FBUSxXQUFXO0NBTTFEO0FBRUQsTUFBTSxPQUFPLG1CQUFvQixTQUFRLDBCQUEwQjtDQUlsRTtBQUVELE1BQU0sT0FBTyx1QkFBd0IsU0FBUSxXQUFXO0NBQUc7QUFDM0QsTUFBTSxPQUFPLG1CQUFvQixTQUFRLFdBQVc7Q0FFbkQ7QUFFRCxNQUFNLE9BQU8saUJBQWtCLFNBQVEsV0FBVztDQUlqRDtBQUVELE1BQU0sT0FBTyxnQkFBaUIsU0FBUSwwQkFBMEI7Q0FBRztBQUVuRSxNQUFNLE9BQU8sVUFBVyxTQUFRLFdBQVc7Q0FLMUM7QUFFRCxNQUFNLE9BQU8sWUFBYSxTQUFRLFdBQVc7Q0FHNUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlRW50aXR5IH0gZnJvbSAnLi4vY29yZU1vZGVscy9iYXNlRW50aXR5Lm1vZGVsJztcclxuaW1wb3J0IHsgUmVmZXJlbmNlVmFsdWVJdGVtIH0gZnJvbSAnLi4vY29yZU1vZGVscy9yZWZlcmVuY2VWYWx1ZS5tb2RlbCc7XHJcblxyXG5leHBvcnQgY2xhc3MgQmFzZUlucHV0IHtcclxuICAgIG5hbWU/OiBzdHJpbmc7XHJcbiAgICBsYWJlbD86IHN0cmluZztcclxuICAgIHR5cGU/OiBJbnB1dFR5cGVzO1xyXG59XHJcblxyXG5leHBvcnQgZW51bSBJbnB1dFR5cGVzIHtcclxuICAgIG51bGwgPSAnbnVsbCcsXHJcbiAgICB0ZXh0Ym94ID0gJ3RleHRib3gnLFxyXG4gICAgbnVtYmVyID0gJ251bWJlcicsXHJcbiAgICBlbWFpbCA9ICdlbWFpbCcsXHJcbiAgICBwYXNzd29yZCA9ICdwYXNzd29yZCcsXHJcbiAgICB0ZXh0YXJlYSA9ICd0ZXh0YXJlYScsXHJcbiAgICBkYXRldGltZSA9ICdkYXRldGltZScsXHJcbiAgICBkYXRlID0gJ2RhdGUnLFxyXG4gICAgdGltZSA9ICd0aW1lJyxcclxuICAgIHNlbGVjdCA9ICdzZWxlY3QnLFxyXG4gICAgc3dpdGNoID0gJ3N3aXRjaCcsXHJcbiAgICBlZGl0b3IgPSAnZWRpdG9yJyxcclxuICAgIGxpc3Rib3ggPSAnbGlzdGJveCcsXHJcbiAgICBjb2xvdXJwaWNrZXIgPSAnY29sb3VycGlja2VyJyxcclxuICAgIHNwaW5uZXIgPSAnc3Bpbm5lcicsXHJcbiAgICBzbGlkZXIgPSAnc2xpZGVyJyxcclxuICAgIGNoZWNrYm94ID0gJ2NoZWNrYm94JyxcclxuICAgIHRyaWNoZWNrYm94ID0gJ3RyaWNoZWNrYm94JyxcclxuICAgIHRyZWUgPSAndHJlZScsXHJcbiAgICBzZWxlY3RidXR0b24gPSAnc2VsZWN0YnV0dG9uJyxcclxuICAgIHRvZ2dsZWJ1dHRvbiA9ICd0b2dnbGVidXR0b24nLFxyXG4gICAgcmFkaW8gPSAncmFkaW8nLFxyXG4gICAgcmFkaW9idXR0b25zID0gJ3JhZGlvYnV0dG9ucycsXHJcbiAgICBkcm9wZG93biA9ICdkcm9wZG93bicsXHJcbiAgICByYXRpbmcgPSAncmF0aW5nJyxcclxuICAgIGF1dG9jb21wbGV0ZSA9ICdhdXRvY29tcGxldGUnLFxyXG4gICAgbXVsdGlzZWxlY3QgPSAnbXVsdGlzZWxlY3QnLFxyXG4gICAgY2hpcHMgPSAnY2hpcHMnLFxyXG4gICAga2V5ZmlsdGVyID0gJ2tleWZpbHRlcicsXHJcbiAgICBmaWxlYXR0YWNoID0gJ2ZpbGVhdHRhY2gnLFxyXG4gICAgZHluYW1pYyA9ICdkeW5hbWljJyxcclxuICAgIHNlYXJjaCA9ICdzZWFyY2gnLFxyXG4gICAgcmVwZWF0Zm9ybSA9ICdyZXBlYXRmb3JtJ1xyXG59XHJcbmV4cG9ydCBjbGFzcyBJbnB1dERldGFpbCBleHRlbmRzIEJhc2VFbnRpdHkge1xyXG4gICAgbGFiZWw/OiBzdHJpbmc7XHJcbiAgICB0eXBlPzogSW5wdXRUeXBlcztcclxuICAgIHBsYWNlaG9sZGVyPzogc3RyaW5nO1xyXG4gICAgaGVscD86IHN0cmluZztcclxuICAgIGNvbXBhcmlzb24/OiBzdHJpbmc7XHJcbiAgICBhbGxvd2NvbXBhcmlzb25jaGFuZ2U/OiBzdHJpbmc7XHJcbiAgICBjb250YWluZXJDbGFzcz86IHN0cmluZzsgLy8gRWl0aGVyIGZ1bGwgMTIgY29scyBvciBzbWFsbGVyIGlmIGhlbHAgcHJlc2VudFxyXG4gICAgY2xhc3Nlcz86IHN0cmluZztcclxuICAgIGhpZGRlbj86IGJvb2xlYW47XHJcbiAgICB0YWJpbmRleD86IG51bWJlcjtcclxuXHJcbiAgICByZWFkb25seT86IGJvb2xlYW47XHJcblxyXG4gICAgLy8gZGVmYXVsdCB2YWx1ZVxyXG4gICAgLy8gZGF0ZTogdG9kYXksIHRvbW9ycm93LCB5ZXN0ZXJkYXlcclxuICAgIHZhbHVlPzogYW55O1xyXG5cclxuICAgIHZhbGlkYXRlUmVxdWlyZWQ/OiBzdHJpbmc7IC8vIFByb3ZpZGluZyBhIG1lc3NhZ2UgaGVyZSBpbmZlciBSZXF1aXJlZFxyXG4gICAgdmFsaWRhdGVSZXF1aXJlZFRydWU/OiBzdHJpbmc7IC8vIFByb3ZpZGluZyBhIG1lc3NhZ2UgaGVyZSBpbmZlciBSZXF1aXJlZFRydWVcclxuXHJcbiAgICB2YWxpZGF0ZUVtYWlsPzogc3RyaW5nOyAvLyBQcm92aWRpbmcgYSBtZXNzYWdlIGhlcmUgaW5mZXIgUmVxdWlyZWRFbWFpbFxyXG5cclxuICAgIHZhbGlkYXRlUGF0dGVybj86IHN0cmluZztcclxuICAgIHZhbGlkYXRlUGF0dGVybk1lc3NhZ2U/OiBzdHJpbmc7XHJcblxyXG4gICAgdmFsaWRhdGVNaW4/OiBudW1iZXI7XHJcbiAgICB2YWxpZGF0ZU1pbk1lc3NhZ2U/OiBzdHJpbmc7XHJcblxyXG4gICAgdmFsaWRhdGVNYXg/OiBudW1iZXI7XHJcbiAgICB2YWxpZGF0ZU1heE1lc3NhZ2U/OiBzdHJpbmc7XHJcblxyXG4gICAgdmFsaWRhdGVNaW5MZW5ndGg/OiBudW1iZXI7XHJcbiAgICB2YWxpZGF0ZU1pbkxlbmd0aE1lc3NhZ2U/OiBzdHJpbmc7XHJcblxyXG4gICAgdmFsaWRhdGVNYXhMZW5ndGg/OiBudW1iZXI7XHJcbiAgICB2YWxpZGF0ZU1heExlbmd0aE1lc3NhZ2U/OiBzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dERldGFpbEZpbGUgZXh0ZW5kcyBJbnB1dERldGFpbCB7fVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0RGV0YWlsVGV4dEJveCBleHRlbmRzIElucHV0RGV0YWlsIHtcclxuICAgIG1hc2s/OiBzdHJpbmc7IC8vIDk5OS05OTlcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0RGV0YWlsRGF0ZVRpbWUgZXh0ZW5kcyBJbnB1dERldGFpbCB7XHJcbiAgICBmb3JjZVVUQzogYm9vbGVhbjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0RGV0YWlsUmVmZXJlbmNlVmFsdWVzIGV4dGVuZHMgSW5wdXREZXRhaWwge1xyXG4gICAgcmVmZXJlbmNlVmFsdWVOYW1lPzogc3RyaW5nOyAvLyBVc2VkIGZvciBzZWxlY3QgaXRlbXNcclxuICAgIHJlZmVyZW5jZVZhbHVlU2VlZE5hbWU/OiBzdHJpbmc7IC8vIHNldCB0byBuYW1lLCB3aGVuIGNoYW5nZWQgdXNlIHRoaXMgdmFsdWUgaW4gc2VhcmNoXHJcbiAgICByZWZlcmVuY2VWYWx1ZUNoaWxkTGV2ZWw/OiBudW1iZXI7IC8vIFdoZXJlIHRoZSBSZWZlcmVuY2UgZGF0YSBjb250YWlucyBjaGlsZHJlbiwgd2hpY2ggbGV2ZWwgZG93biBkbyB3ZSBnb1xyXG4gICAgZGF0YXNvdXJjZUl0ZW1zPzogQXJyYXk8UmVmZXJlbmNlVmFsdWVJdGVtPjsgLy8gUmVzdWx0cyBvZiB0aGUgZGF0YXNvdXJjZSBzdG9yZWQgaGVyZSBmb3IgYmluZGluZ1xyXG4gICAgcmVmZXJlbmNlVmFsdWVTZWVkRGVwZW5kZW5jeT86IHN0cmluZzsgLy8gTmFtZSBvZiBjb250cm9sIHRvIHVzZSBhcyBzZWVkIGZvciB0aGlzIERhdGFTb3VyY2UuLi4gVXNlZCBsaW5rZWQgRHJvcGRvd25zXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dERldGFpbERyb3Bkb3duIGV4dGVuZHMgSW5wdXREZXRhaWxSZWZlcmVuY2VWYWx1ZXMge1xyXG4gICAgc2VsZWN0RmlsdGVyPzogYm9vbGVhbjsgLy8gU2hvdyBGaWx0ZXIgb24gU2VsZWN0IERyb3Bkb3duXHJcbiAgICBzZWxlY3RGaWx0ZXJCeT86IHN0cmluZzsgLy8gRmllbGRzIHRvIGZpbHRlciBieSBvbiBTZWxlY3QgRHJvcERvd25cclxuICAgIHNlbGVjdEZpbHRlclBsYWNlaG9sZGVyPzogc3RyaW5nOyAvLyBQbGFjZWhvbGRlciBmb3IgRmlsdGVyIGlucHV0XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dERldGFpbFRvZ2dsZUJ1dHRvbiBleHRlbmRzIElucHV0RGV0YWlsIHt9XHJcbmV4cG9ydCBjbGFzcyBJbnB1dERldGFpbFRleHRBcmVhIGV4dGVuZHMgSW5wdXREZXRhaWwge1xyXG4gICAgcm93cz86IG51bWJlcjsgLy8gUm93cyBmb3IgVGV4dEFyZWFcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0RGV0YWlsU2xpZGVyIGV4dGVuZHMgSW5wdXREZXRhaWwge1xyXG4gICAgbWluPzogbnVtYmVyO1xyXG4gICAgbWF4PzogbnVtYmVyO1xyXG4gICAgc3RlcD86IG51bWJlcjtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0QXV0b0NvbXBldGUgZXh0ZW5kcyBJbnB1dERldGFpbFJlZmVyZW5jZVZhbHVlcyB7fVxyXG5cclxuZXhwb3J0IGNsYXNzIEZpbGVBdHRhY2ggZXh0ZW5kcyBJbnB1dERldGFpbCB7XHJcbiAgICAvLyBQYXR0ZXJuIHRvIHJlc3RyaWN0IHRoZSBhbGxvd2VkIGZpbGUgdHlwZXMgc3VjaCBhcyBcImltYWdlLypcIi5cclxuICAgIGFjY2VwdDogc3RyaW5nO1xyXG4gICAgLy8gTWF4aW11bSBmaWxlIHNpemUgYWxsb3dlZCBpbiBieXRlcy5cclxuICAgIG1heEZpbGVTaXplOiBudW1iZXI7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dER5bmFtaWMgZXh0ZW5kcyBJbnB1dERldGFpbCB7XHJcbiAgICBhbmd1bGFyQ29tcG9uZW50Pzogc3RyaW5nOyAvLyBuYW1lIG9mIGNvbXBvbmVudCB0byBnZW5lcmF0ZVxyXG4gICAgYWRkaXRpb25hbFByb3BlcnRpZXM/OiBvYmplY3Q7IC8vIHBhc3NlZCB0byBjb21wb25lbnRzIGlucHV0XHJcbn1cclxuIl19