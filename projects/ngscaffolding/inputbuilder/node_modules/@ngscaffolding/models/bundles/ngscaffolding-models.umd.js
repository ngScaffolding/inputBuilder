(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@ngscaffolding/models', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.ngscaffolding = global.ngscaffolding || {}, global.ngscaffolding.models = {}), global.ng.core));
}(this, (function (exports, i0) { 'use strict';

    var SetPasswordModel = /** @class */ (function () {
        function SetPasswordModel() {
        }
        return SetPasswordModel;
    }());

    var BasicUser = /** @class */ (function () {
        function BasicUser() {
            this.role = [];
        }
        return BasicUser;
    }());
    function createBasicUser() {
        return {
            userId: null,
            email: null,
            name: null,
            firstName: null,
            lastName: null,
            role: []
        };
    }

    var AuthUserResponse = /** @class */ (function () {
        function AuthUserResponse() {
        }
        return AuthUserResponse;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    ;
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, privateMap) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to get private field on non-instance");
        }
        return privateMap.get(receiver);
    }
    function __classPrivateFieldSet(receiver, privateMap, value) {
        if (!privateMap.has(receiver)) {
            throw new TypeError("attempted to set private field on non-instance");
        }
        privateMap.set(receiver, value);
        return value;
    }

    var BaseEntity = /** @class */ (function () {
        function BaseEntity() {
        }
        return BaseEntity;
    }());

    var Role = /** @class */ (function (_super) {
        __extends(Role, _super);
        function Role() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Role;
    }(BaseEntity));

    var Action = /** @class */ (function (_super) {
        __extends(Action, _super);
        function Action() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return Action;
    }(BaseEntity));
    var DialogOptions = /** @class */ (function () {
        function DialogOptions() {
        }
        return DialogOptions;
    }());

    var ActionRequestModel = /** @class */ (function () {
        function ActionRequestModel() {
        }
        return ActionRequestModel;
    }());
    var ActionResultModel = /** @class */ (function () {
        function ActionResultModel() {
        }
        return ActionResultModel;
    }());

    var AppSettingsValue = /** @class */ (function (_super) {
        __extends(AppSettingsValue, _super);
        function AppSettingsValue() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AppSettingsValue;
    }(BaseEntity));
    (function (AppSettings) {
        AppSettings["title"] = "title";
        AppSettings["mobiletitle"] = "mobileTitle";
        AppSettings["iconUrl"] = "iconUrl";
        // Error Handling
        AppSettings["errorShowUser"] = "errorShowUser";
        AppSettings["errorLogConsole"] = "errorLogConsole";
        AppSettings["errorLogServer"] = "errorLogServer";
        AppSettings["pageNotFoundText"] = "pageNotFoundText";
        // Auth Settings
        AppSettings["authSaveinLocalStorage"] = "authSaveinLocalStorage";
        AppSettings["authShowRememberMe"] = "authShowRememberMe";
        AppSettings["authShowForgotPassword"] = "authShowForgotPassword";
        AppSettings["authShowRegister"] = "authShowRegister";
        AppSettings["authTermsAndConditions"] = "authTermsAndConditions";
        AppSettings["authClientId"] = "authClientId";
        AppSettings["authClientSecret"] = "authClientSecret";
        AppSettings["authScope"] = "authScope";
        AppSettings["authUserIdIsEmail"] = "authUserIdIsEmail";
        AppSettings["authUserUniqueField"] = "authUserUniqueField";
        AppSettings["authTokenEndpoint"] = "authTokenEndpoint";
        AppSettings["authPasswordMinLength"] = "authPasswordMinLength";
        AppSettings["authPasswordUpperCase"] = "authPasswordUpperCase";
        AppSettings["authPasswordLowerCase"] = "authPasswordLowerCase";
        AppSettings["authPasswordNumeric"] = "authPasswordNumeric";
        AppSettings["authPasswordSpecial"] = "authPasswordSpecial";
        AppSettings["authRequiredRole"] = "authRequiredRole";
        // OAuth Settings block
        AppSettings["authOAuthSettings"] = "authOAuthSettings";
        // Screen Furniture
        AppSettings["showFooter"] = "showFooter";
        AppSettings["showTopNotifications"] = "showTopNotifications";
        AppSettings["showTopSearch"] = "showTopSearch";
        AppSettings["showTopProfile"] = "showTopProfile";
        AppSettings["showFullMessages"] = "showFullMessages";
        AppSettings["showToastMessages"] = "showToastMessages";
        AppSettings["showProfileSetting"] = "showProfileSetting";
        AppSettings["showProfilePicture"] = "showProfilePicture";
        AppSettings["showUserSetting"] = "showUserSetting";
        AppSettings["menuType"] = "menuType";
        AppSettings["compactMode"] = "compactMode";
        AppSettings["agGridTheme"] = "agGridTheme";
        // Input Builder
        AppSettings["inputShowCalendarIcon"] = "inputShowCalendarIcon";
        AppSettings["inputDateTimeFormat"] = "inputDateTimeFormat";
        AppSettings["inputDateFormat"] = "inputDateFormat";
        AppSettings["inputDateForceUTC"] = "inputDateForceUTC";
        AppSettings["inputDateShowButtonBar"] = "inputDateShowButtonBar";
        // File Uploads
        AppSettings["maximumFileSize"] = "maximumFileSize";
        AppSettings["allowedFileTypes"] = "allowedFileTypes";
        // moment Formats for dates
        AppSettings["dateTimeFormat"] = "dateTimeFormat";
        AppSettings["dateFormat"] = "dateFormat";
        // DataGrid Options
        AppSettings["dataGridIconToolBar"] = "dataGridIconToolBar";
        AppSettings["dataGridAllowConfigureColumns"] = "dataGridAllowConfigureColumns";
        AppSettings["dataGridAllowExport"] = "dataGridAllowExport";
        AppSettings["dataGridAllowSaveView"] = "dataGridAllowSaveView";
        AppSettings["dataGridAllowResetView"] = "dataGridAllowResetView";
        AppSettings["dataGridAllowShareView"] = "dataGridAllowShareView";
        AppSettings["dataGridUseEnterprise"] = "dataGridUseEnterprise";
        // Dashboard Settings
        AppSettings["dashboardDefaultConfig"] = "dashboardDefaultConfig";
        // User Preferences
        AppSettings["prefHideTheme"] = "prefHideTheme";
        AppSettings["apiHome"] = "apiHome";
        AppSettings["apiAuth"] = "apiAuth";
        AppSettings["apiServers"] = "apiServers";
        AppSettings["cacheDefaultSeconds"] = "cacheDefaultSeconds";
        // Mobile settings
        AppSettings["isMobile"] = "isMobile";
        AppSettings["mobileTitle"] = "mobileTitle";
        AppSettings["mobileCacheNames"] = "mobileCacheNames";
        AppSettings["mobileDefaultTimeout"] = "mobileDefaultTimeout";
        AppSettings["mobileDefaultRetries"] = "mobileDefaultRetries";
        AppSettings["mobileDefaultPolling"] = "mobileDefaultPolling";
    })(exports.AppSettings || (exports.AppSettings = {}));

    var CacheEntry = /** @class */ (function () {
        function CacheEntry() {
        }
        return CacheEntry;
    }());

    var ZuluDateHelper = /** @class */ (function () {
        function ZuluDateHelper() {
        }
        ZuluDateHelper.getZuluDate = function (inputDate) {
            if (!inputDate) {
                return null;
            }
            return new Date(Date.UTC(inputDate.getUTCFullYear(), inputDate.getUTCMonth(), inputDate.getUTCDate(), inputDate.getUTCHours(), inputDate.getUTCMinutes(), inputDate.getUTCSeconds()));
        };
        ZuluDateHelper.getGMTDate = function (inputDate) {
            if (!inputDate) {
                return null;
            }
            var _userOffset = inputDate.getTimezoneOffset() * 60 * 1000;
            return new Date(inputDate.getTime() + _userOffset);
        };
        ZuluDateHelper.setGMTDate = function (inputDate) {
            if (!inputDate) {
                return null;
            }
            var _userOffset = inputDate.getTimezoneOffset() * 60 * 1000;
            return new Date(inputDate.getTime() - _userOffset);
        };
        return ZuluDateHelper;
    }());

    var ErrorModel = /** @class */ (function () {
        function ErrorModel(err) {
            this.message = err.message;
            this.dateRecorded = ZuluDateHelper.setGMTDate(new Date());
        }
        return ErrorModel;
    }());

    var Message = /** @class */ (function () {
        function Message() {
        }
        return Message;
    }());

    var ReferenceValue = /** @class */ (function (_super) {
        __extends(ReferenceValue, _super);
        function ReferenceValue() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ReferenceValue;
    }(BaseEntity));
    var ReferenceValueItem = /** @class */ (function () {
        function ReferenceValueItem() {
        }
        return ReferenceValueItem;
    }());
    function createReferenceValue(params) {
        return {
            name: '',
            value: null
        };
    }

    (function (PreferenceTypes) {
        PreferenceTypes["UserPrefs_Profile"] = "UserPrefs_Profile";
    })(exports.PreferenceTypes || (exports.PreferenceTypes = {}));
    var UserPreferenceDefinition = /** @class */ (function (_super) {
        __extends(UserPreferenceDefinition, _super);
        function UserPreferenceDefinition() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return UserPreferenceDefinition;
    }(BaseEntity));
    var UserPreferenceValue = /** @class */ (function (_super) {
        __extends(UserPreferenceValue, _super);
        function UserPreferenceValue() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return UserPreferenceValue;
    }(BaseEntity));

    var DataSourceRequest = /** @class */ (function () {
        function DataSourceRequest() {
        }
        return DataSourceRequest;
    }());

    var ColumnModel = /** @class */ (function (_super) {
        __extends(ColumnModel, _super);
        function ColumnModel() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return ColumnModel;
    }(BaseEntity));

    var GridViewDetail = /** @class */ (function () {
        function GridViewDetail() {
        }
        return GridViewDetail;
    }());

    var BaseDataSource = /** @class */ (function () {
        function BaseDataSource() {
        }
        return BaseDataSource;
    }());

    var APILocation = /** @class */ (function () {
        function APILocation() {
        }
        return APILocation;
    }());

    (function (ParameterTypes) {
        ParameterTypes["String"] = "string";
        ParameterTypes["Number"] = "number";
        ParameterTypes["Boolean"] = "boolean";
        ParameterTypes["Date"] = "date";
        ParameterTypes["Binary"] = "binary";
    })(exports.ParameterTypes || (exports.ParameterTypes = {}));

    var RestApiDataSource = /** @class */ (function () {
        function RestApiDataSource() {
        }
        return RestApiDataSource;
    }());

    var SqlDataSource = /** @class */ (function () {
        function SqlDataSource() {
        }
        return SqlDataSource;
    }());

    var DocumentDBDataSource = /** @class */ (function () {
        function DocumentDBDataSource() {
        }
        return DocumentDBDataSource;
    }());

    var MongoDBDataSource = /** @class */ (function (_super) {
        __extends(MongoDBDataSource, _super);
        function MongoDBDataSource() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return MongoDBDataSource;
    }(BaseDataSource));

    var MySqlDataSource = /** @class */ (function () {
        function MySqlDataSource() {
        }
        return MySqlDataSource;
    }());

    var InputBuilderDefinition = /** @class */ (function (_super) {
        __extends(InputBuilderDefinition, _super);
        function InputBuilderDefinition() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputBuilderDefinition;
    }(BaseEntity));

    var BaseInput = /** @class */ (function () {
        function BaseInput() {
        }
        return BaseInput;
    }());
    (function (InputTypes) {
        InputTypes["null"] = "null";
        InputTypes["textbox"] = "textbox";
        InputTypes["number"] = "number";
        InputTypes["email"] = "email";
        InputTypes["password"] = "password";
        InputTypes["textarea"] = "textarea";
        InputTypes["datetime"] = "datetime";
        InputTypes["date"] = "date";
        InputTypes["time"] = "time";
        InputTypes["select"] = "select";
        InputTypes["switch"] = "switch";
        InputTypes["editor"] = "editor";
        InputTypes["listbox"] = "listbox";
        InputTypes["colourpicker"] = "colourpicker";
        InputTypes["spinner"] = "spinner";
        InputTypes["slider"] = "slider";
        InputTypes["checkbox"] = "checkbox";
        InputTypes["tricheckbox"] = "tricheckbox";
        InputTypes["tree"] = "tree";
        InputTypes["selectbutton"] = "selectbutton";
        InputTypes["togglebutton"] = "togglebutton";
        InputTypes["radio"] = "radio";
        InputTypes["radiobuttons"] = "radiobuttons";
        InputTypes["dropdown"] = "dropdown";
        InputTypes["rating"] = "rating";
        InputTypes["autocomplete"] = "autocomplete";
        InputTypes["multiselect"] = "multiselect";
        InputTypes["chips"] = "chips";
        InputTypes["keyfilter"] = "keyfilter";
        InputTypes["fileattach"] = "fileattach";
        InputTypes["dynamic"] = "dynamic";
        InputTypes["search"] = "search";
        InputTypes["repeatform"] = "repeatform";
    })(exports.InputTypes || (exports.InputTypes = {}));
    var InputDetail = /** @class */ (function (_super) {
        __extends(InputDetail, _super);
        function InputDetail() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetail;
    }(BaseEntity));
    var InputDetailFile = /** @class */ (function (_super) {
        __extends(InputDetailFile, _super);
        function InputDetailFile() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailFile;
    }(InputDetail));
    var InputDetailTextBox = /** @class */ (function (_super) {
        __extends(InputDetailTextBox, _super);
        function InputDetailTextBox() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailTextBox;
    }(InputDetail));
    var InputDetailDateTime = /** @class */ (function (_super) {
        __extends(InputDetailDateTime, _super);
        function InputDetailDateTime() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailDateTime;
    }(InputDetail));
    var InputDetailReferenceValues = /** @class */ (function (_super) {
        __extends(InputDetailReferenceValues, _super);
        function InputDetailReferenceValues() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailReferenceValues;
    }(InputDetail));
    var InputDetailDropdown = /** @class */ (function (_super) {
        __extends(InputDetailDropdown, _super);
        function InputDetailDropdown() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailDropdown;
    }(InputDetailReferenceValues));
    var InputDetailToggleButton = /** @class */ (function (_super) {
        __extends(InputDetailToggleButton, _super);
        function InputDetailToggleButton() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailToggleButton;
    }(InputDetail));
    var InputDetailTextArea = /** @class */ (function (_super) {
        __extends(InputDetailTextArea, _super);
        function InputDetailTextArea() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailTextArea;
    }(InputDetail));
    var InputDetailSlider = /** @class */ (function (_super) {
        __extends(InputDetailSlider, _super);
        function InputDetailSlider() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDetailSlider;
    }(InputDetail));
    var InputAutoCompete = /** @class */ (function (_super) {
        __extends(InputAutoCompete, _super);
        function InputAutoCompete() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputAutoCompete;
    }(InputDetailReferenceValues));
    var FileAttach = /** @class */ (function (_super) {
        __extends(FileAttach, _super);
        function FileAttach() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return FileAttach;
    }(InputDetail));
    var InputDynamic = /** @class */ (function (_super) {
        __extends(InputDynamic, _super);
        function InputDynamic() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return InputDynamic;
    }(InputDetail));

    var NotifcationDetails = /** @class */ (function () {
        function NotifcationDetails() {
        }
        return NotifcationDetails;
    }());

    var NotificationSentMessage = /** @class */ (function () {
        function NotificationSentMessage() {
        }
        return NotificationSentMessage;
    }());

    var NotifcationSubscriber = /** @class */ (function () {
        function NotifcationSubscriber() {
        }
        return NotifcationSubscriber;
    }());

    var DeepCloneHelper = /** @class */ (function () {
        function DeepCloneHelper() {
        }
        DeepCloneHelper.getDeepCopy = function (obj) {
            var copy;
            // Handle the 3 simple types, and null or undefined
            // tslint:disable-next-line: triple-equals
            if (null == obj || 'object' != typeof obj) {
                return obj;
            }
            // Handle Date
            if (obj instanceof Date) {
                copy = new Date();
                copy.setTime(obj.getTime());
                return copy;
            }
            // Handle Array
            if (obj instanceof Array) {
                copy = [];
                for (var i = 0, len = obj.length; i < len; i++) {
                    copy[i] = DeepCloneHelper.getDeepCopy(obj[i]);
                }
                return copy;
            }
            // Handle Object
            if (obj instanceof Object) {
                copy = {};
                for (var attr in obj) {
                    if (attr !== 'component' && obj.hasOwnProperty(attr)) {
                        copy[attr] = DeepCloneHelper.getDeepCopy(obj[attr]);
                    }
                }
                return copy;
            }
            throw new Error('Unable to copy obj! Its type is not supported.');
        };
        return DeepCloneHelper;
    }());

    var ObjectPathHelper = /** @class */ (function () {
        function ObjectPathHelper() {
        }
        ObjectPathHelper.get = function (model, path) {
            if (!path.includes('.')) {
                return model[path];
            }
            else {
                return this.getNode(model, path);
            }
        };
        ObjectPathHelper.set = function (model, path, value) {
            if (!path.includes('.')) {
                model[path] = value;
            }
            else {
                var prop = this.getNode(model, path);
                prop = value;
            }
        };
        ObjectPathHelper.getNode = function (model, path) {
            var pathNodes = path.split('.');
            var pointer = model;
            pathNodes.forEach(function (nodeName) {
                pointer = pointer[nodeName];
            });
            return pointer;
        };
        return ObjectPathHelper;
    }());

    var ModelsModule = /** @class */ (function () {
        function ModelsModule() {
        }
        return ModelsModule;
    }());
    ModelsModule.ɵmod = i0.ɵɵdefineNgModule({ type: ModelsModule });
    ModelsModule.ɵinj = i0.ɵɵdefineInjector({ factory: function ModelsModule_Factory(t) { return new (t || ModelsModule)(); }, imports: [[]] });
    /*@__PURE__*/ (function () {
        i0.ɵsetClassMetadata(ModelsModule, [{
                type: i0.NgModule,
                args: [{
                        declarations: [],
                        imports: [],
                    }]
            }], null, null);
    })();

    /*
     * Public API Surface of models
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.APILocation = APILocation;
    exports.Action = Action;
    exports.ActionRequestModel = ActionRequestModel;
    exports.ActionResultModel = ActionResultModel;
    exports.AppSettingsValue = AppSettingsValue;
    exports.AuthUserResponse = AuthUserResponse;
    exports.BaseDataSource = BaseDataSource;
    exports.BaseEntity = BaseEntity;
    exports.BaseInput = BaseInput;
    exports.BasicUser = BasicUser;
    exports.CacheEntry = CacheEntry;
    exports.ColumnModel = ColumnModel;
    exports.DataSourceRequest = DataSourceRequest;
    exports.DeepCloneHelper = DeepCloneHelper;
    exports.DialogOptions = DialogOptions;
    exports.DocumentDBDataSource = DocumentDBDataSource;
    exports.ErrorModel = ErrorModel;
    exports.FileAttach = FileAttach;
    exports.GridViewDetail = GridViewDetail;
    exports.InputAutoCompete = InputAutoCompete;
    exports.InputBuilderDefinition = InputBuilderDefinition;
    exports.InputDetail = InputDetail;
    exports.InputDetailDateTime = InputDetailDateTime;
    exports.InputDetailDropdown = InputDetailDropdown;
    exports.InputDetailFile = InputDetailFile;
    exports.InputDetailReferenceValues = InputDetailReferenceValues;
    exports.InputDetailSlider = InputDetailSlider;
    exports.InputDetailTextArea = InputDetailTextArea;
    exports.InputDetailTextBox = InputDetailTextBox;
    exports.InputDetailToggleButton = InputDetailToggleButton;
    exports.InputDynamic = InputDynamic;
    exports.Message = Message;
    exports.ModelsModule = ModelsModule;
    exports.MongoDBDataSource = MongoDBDataSource;
    exports.MySqlDataSource = MySqlDataSource;
    exports.NotifcationDetails = NotifcationDetails;
    exports.NotifcationSubscriber = NotifcationSubscriber;
    exports.NotificationSentMessage = NotificationSentMessage;
    exports.ObjectPathHelper = ObjectPathHelper;
    exports.ReferenceValue = ReferenceValue;
    exports.ReferenceValueItem = ReferenceValueItem;
    exports.RestApiDataSource = RestApiDataSource;
    exports.Role = Role;
    exports.SetPasswordModel = SetPasswordModel;
    exports.SqlDataSource = SqlDataSource;
    exports.UserPreferenceDefinition = UserPreferenceDefinition;
    exports.UserPreferenceValue = UserPreferenceValue;
    exports.ZuluDateHelper = ZuluDateHelper;
    exports.createBasicUser = createBasicUser;
    exports.createReferenceValue = createReferenceValue;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ngscaffolding-models.umd.js.map
