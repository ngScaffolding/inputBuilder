{"version":3,"file":"ngscaffolding-models.js","sources":["../projects/ngscaffolding/models/src/lib/models/authModels/auth.requests.ts","../projects/ngscaffolding/models/src/lib/models/authModels/authUser.model.ts","../projects/ngscaffolding/models/src/lib/models/authModels/authUserResponse.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/baseEntity.model.ts","../projects/ngscaffolding/models/src/lib/models/authModels/role.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/action.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/actionRequest.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/appSettings.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/cacheEntry.model.ts","../../projects/ngscaffolding/models/src/lib/models/zuluDate.helper.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/error.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/message.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/referenceValue.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/userPreference.model.ts","../projects/ngscaffolding/models/src/lib/models/coreModels/dataSource.request.model.ts","../projects/ngscaffolding/models/src/lib/models/datagridModels/column.model.ts","../projects/ngscaffolding/models/src/lib/models/datagridModels/gridViewDetail.model.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/base.dataSource.model.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/APILocation.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/parameterDetail.model.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/restApi.dataSource.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/sql.dataSource.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/documentDB.dataSource.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/mongoDB.dataSource.ts","../projects/ngscaffolding/models/src/lib/models/dataSourceModels/mySql.dataSource.ts","../projects/ngscaffolding/models/src/lib/models/inputBuilderModels/inputBuilderDefinition.model.ts","../projects/ngscaffolding/models/src/lib/models/inputBuilderModels/inputDetail.model.ts","../projects/ngscaffolding/models/src/lib/models/notificationModels/notificationDetails.model.ts","../projects/ngscaffolding/models/src/lib/models/notificationModels/notificationSent.model.ts","../projects/ngscaffolding/models/src/lib/models/notificationModels/notificationSubscriber.model.ts","../../projects/ngscaffolding/models/src/lib/models/deepClone.helper.ts","../../projects/ngscaffolding/models/src/lib/models/objectPath.helper.ts","../../../projects/ngscaffolding/models/src/lib/models.module.ts","../../../../projects/ngscaffolding/models/src/public-api.ts","../../../../projects/ngscaffolding/models/src/ngscaffolding-models.ts"],"sourcesContent":["\r\nexport class SetPasswordModel {\r\n    newPassword: string;\r\n    mustChange?: boolean;\r\n}","export class BasicUser {\r\n    public userId: string;\r\n\r\n    // Only used in creation screen\r\n    public modelUserId?: string;\r\n    public email: string;\r\n    public name: string;\r\n    public firstName: string;\r\n    public lastName: string;\r\n\r\n    public role: string[] = [];\r\n}\r\n\r\nexport function createBasicUser(): BasicUser {\r\n    return {\r\n        userId: null,\r\n        email: null,\r\n        name: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        role: []\r\n    };\r\n}\r\n","export class AuthUserResponse {\r\n    name: string;\r\n    email: string;\r\n    role: string[];\r\n    sub: string;\r\n}\r\n","export class BaseEntity {\r\n    name?: string;\r\n\r\n    roles?: string[];\r\n}\r\n","import { BaseEntity } from '../coreModels/baseEntity.model';\r\n\r\nexport class Role extends BaseEntity {\r\n\r\n    description: string;\r\n\r\n    // To administer this role you need to belong to this group\r\n    adminRole: string;\r\n}\r\n","import { InputBuilderDefinition } from '../inputBuilderModels/inputBuilderDefinition.model';\r\nimport { BaseEntity } from './baseEntity.model';\r\n\r\nexport const enum ButtonColours {\r\n  primary = 'primary',\r\n  secondary = 'secondary',\r\n  success = 'success',\r\n  info = 'info',\r\n  warning = 'warning',\r\n  danger = 'danger',\r\n  blue = 'blue',\r\n  cyan  = 'cyan',\r\n  teal  = 'teal',\r\n  orange  = 'orange',\r\n  deeporange = 'deeporange',\r\n  purple  = 'purple',\r\n  indigo  = 'indigo',\r\n  pink  = 'pink'\r\n}\r\n\r\nexport const enum ActionTypes {\r\n  angularComponent = 'angularComponent',\r\n  dataSource = 'dataSource'\r\n}\r\n\r\nexport class Action extends BaseEntity {\r\n  type?: ActionTypes; // angularComponent\r\n  title?: string;\r\n\r\n  icon?: string; // Example ''\r\n  colour?: string;\r\n\r\n  // Does this Action appear in a Grid column?\r\n  columnButton?: boolean;\r\n\r\n  // Do we need to have atleast one Soure selected?\r\n  selectionRequired?: boolean;\r\n\r\n  // After Action completes, remove these DataSources from cache\r\n    flushReferenceValues?: string | Array<string>;\r\n\r\n  // Does the action work on multiple rows?\r\n  multipleTarget?: boolean;\r\n\r\n  // Message to show on Confirmation of Action\r\n  confirmationMessage?: string;\r\n\r\n  idField?: string;\r\n  idValue?: string;\r\n  entityType?: string;\r\n  additionalProperties?: object;\r\n  inputBuilderDefinition?: InputBuilderDefinition;\r\n  refresh?: boolean;\r\n\r\n  isAudit?: boolean;\r\n\r\n  // Done message\r\n  successMessage?: string;\r\n  successToast?: boolean;\r\n  // Not done\r\n  errorMessage?: string;\r\n  errorToast?: boolean;\r\n\r\n  // For SQL this contains the SQL Command ID\r\n  dataSourceName?: string;\r\n\r\n  // Angular Controller content\r\n  angularComponent?: string;\r\n  dialogOptions?: DialogOptions;\r\n\r\n  // Standard Url\r\n  url?: string;\r\n  target?: string;\r\n\r\n  // Notifcation Details - Action Data Posted to Notification\r\n  notificationDetailsName?: string;\r\n}\r\n\r\nexport class DialogOptions {\r\n  header?: string;\r\n  width?: number;\r\n  height?: number|any;\r\n  maximizable?: boolean;\r\n  closable?: boolean;\r\n}\r\n","import { Action } from './action.model';\r\n\r\nexport class ActionRequestModel {\r\n    action: Action;\r\n    inputDetails: object;\r\n    rows: object[];\r\n}\r\n\r\nexport class ActionResultModel {\r\n    success: boolean;\r\n    message: string;\r\n}\r\n","import { BaseEntity } from './baseEntity.model';\r\n\r\nexport class AppSettingsValue extends BaseEntity {\r\n    value: any;\r\n}\r\n\r\nexport enum AppSettings {\r\n    title = 'title',\r\n    mobiletitle = 'mobileTitle',\r\n    iconUrl = 'iconUrl',\r\n\r\n    // Error Handling\r\n    errorShowUser = 'errorShowUser',\r\n    errorLogConsole = 'errorLogConsole',\r\n    errorLogServer = 'errorLogServer',\r\n    pageNotFoundText = 'pageNotFoundText',\r\n\r\n    // Auth Settings\r\n    authSaveinLocalStorage = 'authSaveinLocalStorage',\r\n    authShowRememberMe = 'authShowRememberMe',\r\n    authShowForgotPassword = 'authShowForgotPassword',\r\n    authShowRegister = 'authShowRegister',\r\n    authTermsAndConditions = 'authTermsAndConditions',\r\n    authClientId = 'authClientId',\r\n    authClientSecret = 'authClientSecret',\r\n    authScope = 'authScope',\r\n    authUserIdIsEmail = 'authUserIdIsEmail',\r\n    authUserUniqueField = 'authUserUniqueField',\r\n    authTokenEndpoint = 'authTokenEndpoint',\r\n    authPasswordMinLength = 'authPasswordMinLength',\r\n    authPasswordUpperCase = 'authPasswordUpperCase',\r\n    authPasswordLowerCase = 'authPasswordLowerCase',\r\n    authPasswordNumeric = 'authPasswordNumeric',\r\n    authPasswordSpecial = 'authPasswordSpecial',\r\n    authRequiredRole = 'authRequiredRole',\r\n\r\n    // OAuth Settings block\r\n    authOAuthSettings = 'authOAuthSettings',\r\n\r\n    // Screen Furniture\r\n    showFooter = 'showFooter',\r\n    showTopNotifications = 'showTopNotifications',\r\n    showTopSearch = 'showTopSearch',\r\n    showTopProfile = 'showTopProfile',\r\n    showFullMessages = 'showFullMessages',\r\n    showToastMessages = 'showToastMessages',\r\n    showProfileSetting = 'showProfileSetting',\r\n    showProfilePicture = 'showProfilePicture',\r\n    showUserSetting = 'showUserSetting',\r\n    menuType = 'menuType',\r\n    compactMode = 'compactMode',\r\n    agGridTheme = 'agGridTheme',\r\n\r\n    // Input Builder\r\n    inputShowCalendarIcon = 'inputShowCalendarIcon',\r\n    inputDateTimeFormat = 'inputDateTimeFormat',\r\n    inputDateFormat = 'inputDateFormat',\r\n    inputDateForceUTC = 'inputDateForceUTC',\r\n    inputDateShowButtonBar= 'inputDateShowButtonBar',\r\n\r\n    // File Uploads\r\n    maximumFileSize = 'maximumFileSize',\r\n    allowedFileTypes = 'allowedFileTypes', // '.doc|.xlsx|audio/*|video/*|image/*'  See: https://www.w3schools.com/tags/att_input_accept.asp\r\n\r\n    // moment Formats for dates\r\n    dateTimeFormat = 'dateTimeFormat',\r\n    dateFormat = 'dateFormat',\r\n\r\n    // DataGrid Options\r\n    dataGridIconToolBar = 'dataGridIconToolBar',\r\n    dataGridAllowConfigureColumns = 'dataGridAllowConfigureColumns',\r\n    dataGridAllowExport = 'dataGridAllowExport',\r\n    dataGridAllowSaveView = 'dataGridAllowSaveView',\r\n    dataGridAllowResetView = 'dataGridAllowResetView',\r\n    dataGridAllowShareView = 'dataGridAllowShareView',\r\n    dataGridUseEnterprise = 'dataGridUseEnterprise',\r\n\r\n    // Dashboard Settings\r\n    dashboardDefaultConfig = 'dashboardDefaultConfig',\r\n\r\n    // User Preferences\r\n    prefHideTheme = 'prefHideTheme',\r\n\r\n    apiHome = 'apiHome',\r\n    apiAuth = 'apiAuth',\r\n    apiServers = 'apiServers',\r\n\r\n    cacheDefaultSeconds = 'cacheDefaultSeconds',\r\n\r\n    // Mobile settings\r\n    isMobile = 'isMobile',\r\n    mobileTitle = 'mobileTitle',\r\n    mobileCacheNames = 'mobileCacheNames',\r\n    mobileDefaultTimeout = 'mobileDefaultTimeout',\r\n    mobileDefaultRetries = 'mobileDefaultRetries',\r\n    mobileDefaultPolling = 'mobileDefaultPolling'\r\n\r\n}\r\n","export class CacheEntry {\r\n    public key: string;\r\n    public value: any;\r\n    public expires: Date;\r\n}\r\n","export class ZuluDateHelper {\r\n    public static getZuluDate(inputDate: Date): Date {\r\n        if (!inputDate) {\r\n            return null;\r\n        }\r\n        return new Date(\r\n            Date.UTC(\r\n                inputDate.getUTCFullYear(),\r\n                inputDate.getUTCMonth(),\r\n                inputDate.getUTCDate(),\r\n                inputDate.getUTCHours(),\r\n                inputDate.getUTCMinutes(),\r\n                inputDate.getUTCSeconds()\r\n            )\r\n        );\r\n    }\r\n\r\n    public static getGMTDate(inputDate: Date): Date {\r\n        if (!inputDate) {\r\n            return null;\r\n        }\r\n        const _userOffset = inputDate.getTimezoneOffset() * 60 * 1000;\r\n        return new Date(inputDate.getTime() + _userOffset);\r\n    }\r\n\r\n    public static setGMTDate(inputDate: Date): Date {\r\n        if (!inputDate) {\r\n            return null;\r\n        }\r\n        const _userOffset = inputDate.getTimezoneOffset() * 60 * 1000;\r\n        return new Date(inputDate.getTime() - _userOffset);\r\n    }\r\n}\r\n","import { ZuluDateHelper } from '../zuluDate.helper';\r\n\r\nexport class ErrorModel {\r\n    public errorId: number;\r\n    public source: string;\r\n    public message: string;\r\n    public dateRecorded: Date;\r\n    public stackTrace: string;\r\n    public userId: string;\r\n\r\n    constructor(err: Error) {\r\n        this.message = err.message;\r\n        this.dateRecorded = ZuluDateHelper.setGMTDate(new Date());\r\n    }\r\n}\r\n","export class Message {\r\n    severity?: string;\r\n    summary?: string;\r\n    detail?: string;\r\n    id?: any;\r\n}\r\n","import { BaseEntity } from './baseEntity.model';\r\n\r\nexport class ReferenceValue extends BaseEntity {\r\n    // Used to store both name and seed in State Management. Not for users.\r\n    compositeKey?: string;\r\n\r\n    // type: string;\r\n    value?: string;\r\n    cacheSeconds?: number;\r\n\r\n    // Filled by code when retrieved for cache reasons\r\n    whenStored?: Date;\r\n\r\n    roles?: string[];\r\n    inputDetails?: string;\r\n\r\n    // Possible to Hard code values Here\r\n    referenceValueItems?: ReferenceValueItem[];\r\n\r\n    // OR\r\n\r\n    // Used to populate from dataSource\r\n    dataSourceName?: string;\r\n    displayProperty?: string;\r\n    valueProperty?: string;\r\n    itemOrderProperty?: string;\r\n    subtitleProperty?: string;\r\n    subtitle2Property?: string;\r\n    subtitle3Property?: string;\r\n    metaProperty?: string;\r\n}\r\n\r\nexport class ReferenceValueItem {\r\n    display: string;\r\n    value: string;\r\n    subtitle?: string;\r\n    subtitle2?: string;\r\n    subtitle3?: string;\r\n    itemOrder?: number;\r\n    meta?: any;\r\n\r\n    // Allow Infinite Nesting of Reference Values Here\r\n    referenceValueItems?: ReferenceValueItem[];\r\n}\r\n\r\nexport function createReferenceValue(params: Partial<ReferenceValue>) {\r\n    return {\r\n        name: '',\r\n        value: null\r\n    } as ReferenceValue;\r\n}\r\n","import { BaseEntity } from './baseEntity.model';\r\nimport { InputDetail } from '../inputBuilderModels/inputDetail.model';\r\nimport { InputBuilderDefinition } from '../inputBuilderModels/inputBuilderDefinition.model';\r\n\r\nexport enum PreferenceTypes {\r\n    UserPrefs_Profile = 'UserPrefs_Profile'\r\n}\r\n\r\nexport class UserPreferenceDefinition extends BaseEntity {\r\n    public inputDetails: InputDetail | InputBuilderDefinition;\r\n    public enabled?: boolean;\r\n}\r\n\r\nexport class UserPreferenceValue extends BaseEntity {\r\n    public userId: string;\r\n    public value: string;\r\n}\r\n","export class DataSourceRequest {\r\n  name: string | string[];\r\n  seed?: string;\r\n  filterValues?: object;\r\n  rowData?: object[];\r\n  inputData?: object;\r\n\r\n  fileNames?: File[];\r\n\r\n  // Pass forceRefresh = true to get the latest value no matter what has gone before\r\n  forceRefresh?: boolean;\r\n\r\n  // e.g. Used to pass objects to create and update\r\n  body?: object;\r\n\r\n  // Pagination\r\n  skip?: number;\r\n  take?: number;\r\n}\r\n","import { BaseEntity } from '../coreModels/baseEntity.model';\r\n\r\nexport class ColumnModel extends BaseEntity {\r\n    field?: string;\r\n\r\n    cellClass?: string;\r\n    tooltipField?: string;\r\n    headerName?: string;\r\n    headerTooltip?: string;\r\n    pinned?: string; // left or right\r\n    suppressMenu?: boolean;\r\n    filter?: boolean;\r\n    sortable?: boolean;\r\n\r\n    // dateTimeColumn, dateColumn, numericColumn, hyperLink\r\n    type?: string;\r\n    hide?: boolean;\r\n    width?: number;\r\n\r\n    // Register the below in gridExtensions Service\r\n    // javascript function to format value display\r\n    valueFormatter?: string;\r\n    // angular component that allows full-html rendering in a cell\r\n    cellRenderer?: string;\r\n\r\n    cellClassRules?: { [cssClassName: string]: string | ((params: any) => boolean) };\r\n\r\n    // Link & Action Buttons\r\n    destinationUrl?: string;\r\n    target?: string;\r\n    buttonTitle?: string;\r\n    buttonIcon?: string;\r\n    requiredValues?: [string];\r\n\r\n    // glyph count column\r\n    icon?: string;\r\n    toolText?: string;\r\n}\r\n","import { ColumnModel } from './column.model';\r\nimport { InputBuilderDefinition } from '../inputBuilderModels/inputBuilderDefinition.model';\r\nimport { Action } from '../coreModels/action.model';\r\n\r\nexport class GridViewDetail {\r\n    title?: string;\r\n\r\n    disableCheckboxSelection?: boolean;\r\n    waitForInput?: boolean;\r\n\r\n    pageSize?: number;\r\n    infiniteScroll?: boolean;\r\n\r\n    // No save functions\r\n    readOnly?: boolean;\r\n\r\n    // Remove unnecessary screen furniture\r\n    isDataIsland?: boolean;\r\n\r\n    // Toolbar settings\r\n    hideToolbar?: boolean;\r\n\r\n    detailUrl?: string;\r\n    detailTarget?: string;\r\n\r\n    serverPagination?: boolean;\r\n    serverSorting?: boolean;\r\n    serverGrouping?: boolean;\r\n\r\n    defaultSort?: string;\r\n\r\n    columns: Array<any>;\r\n    configuredColumns?: Array<any>;\r\n    isActionColumnSplitButton?: any;\r\n    bypassAutoSizeColumns?: boolean;\r\n\r\n    filtersLocation?: string;\r\n\r\n    filters?: InputBuilderDefinition;\r\n\r\n    // row and cell class rules for conditional formatting\r\n    rowClassRules?: { [cssClassName: string]: string | ((params: any) => boolean) };\r\n\r\n    // Value passed to datasources\r\n    seedValue?: string;\r\n\r\n    // Get data from dataSource\r\n    selectDataSourceName?: string;\r\n\r\n    // Or here is the data\r\n    dataValues?: any;\r\n\r\n    actions?: Array<Action>;\r\n}\r\n","import { ParameterDetail } from './parameterDetail.model';\r\nimport { InputDetail } from '../inputBuilderModels/inputDetail.model';\r\nimport { RestApiDataSource } from './restApi.dataSource';\r\nimport { SqlDataSource } from './sql.dataSource';\r\nimport { DocumentDBDataSource } from './documentDB.dataSource';\r\nimport { MongoDBDataSource } from './mongoDB.dataSource';\r\n\r\nexport const enum DataSourceTypes {\r\n    SQL = 'SQL',\r\n    RestApi = 'RestAPI',\r\n    MongoDB = 'MongoDB',\r\n    DocumentDB = 'DocumentDB',\r\n    MySQL = 'MySQL'\r\n}\r\n\r\nexport const enum SystemDataSourceNames {\r\n    APPLOGS_SELECT = 'system.AppLogs.Select',\r\n    ERRORS_SELECT = 'system.Errors.Select',\r\n\r\n    APPSETTINGS_SELECT = 'system.AppSettings.Select',\r\n    APPSETTINGS_DELETE = 'system.AppSettings.Delete',\r\n    APPSETTINGS_UPDATE = 'system.AppSettings.Update',\r\n    APPSETTINGS_CREATE = 'system.AppSettings.Create',\r\n\r\n    USERS_SELECT = 'system.Users.Select',\r\n    USERS_GET = 'system.Users.Get',\r\n    USERS_DELETE = 'system.Users.Delete',\r\n    USERS_UPDATE = 'system.Users.Update',\r\n    USERS_CREATE = 'system.Users.Create',\r\n    USERS_REGISTER = 'system.Users.Register',\r\n    USERS_SETPASSWORD = 'system.Users.SetPassword',\r\n    USERS_CHANGEPASSWORD = 'system.Users.ChangePassword',\r\n    USERS_CONFIRMEMAIL = 'system.Users.ConfirmEmail',\r\n\r\n    ROLES_SELECT = 'system.Roles.Select',\r\n    ROLES_DELETE = 'system.Roles.Delete',\r\n    ROLES_UPDATE = 'system.Roles.Update',\r\n    ROLES_CREATE = 'system.Roles.Create',\r\n\r\n    CLIENTS_SELECT = 'system.Clients.Select',\r\n    CLIENTS_DELETE = 'system.Clients.Delete',\r\n    CLIENTS_UPDATE = 'system.Clients.Update',\r\n    CLIENTS_CREATE = 'system.Clients.Create'\r\n}\r\n\r\nexport class BaseDataSource {\r\n    name: string;\r\n    type: DataSourceTypes;\r\n\r\n    // Expires in Seconds\r\n    expires?: number;\r\n\r\n    // Filled by code when retrieved for cache reasons\r\n    whenStored?: Date;\r\n\r\n    // timeout in milliseconds\r\n    timeout?: number;\r\n\r\n    isPagedData?: boolean;\r\n    isAudit?: boolean;\r\n\r\n    // Name Of DataSource to flush on completed\r\n    flushReferenceValues?: string;\r\n\r\n    parameters?: ParameterDetail[];\r\n    inputControls?: InputDetail[];\r\n\r\n    itemDetails: RestApiDataSource | SqlDataSource | DocumentDBDataSource | MongoDBDataSource;\r\n}\r\n","export class APILocation {\r\n    serverUrl: string;\r\n    jwtSupport: boolean;\r\n}\r\n","export enum ParameterTypes {\r\n    String = 'string',\r\n    Number = 'number',\r\n    Boolean = 'boolean',\r\n    Date = 'date',\r\n    Binary = 'binary'\r\n}\r\n\r\nexport interface ParameterDetail {\r\n    name: string;\r\n    type: ParameterTypes;\r\n    value: any;\r\n    sourceProperty: string;\r\n}\r\n","export interface NameValuePair {\r\n    name: string;\r\n    value: any;\r\n}\r\n\r\nexport class RestApiDataSource {\r\n    serverName: string;\r\n    url: string;\r\n    verb?: string;\r\n    responseType?: string;\r\n\r\n    headerValues?: [NameValuePair];\r\n    bodyValues?: [NameValuePair];\r\n}\r\n","import { ParameterDetail } from './parameterDetail.model';\r\n\r\nexport class SqlDataSource {\r\n    connection: string;\r\n    sqlCommand: string;\r\n\r\n    testCommand?: string;\r\n    isStoredProcedure?: boolean;\r\n\r\n    parameters?: ParameterDetail[];\r\n}\r\n","export class DocumentDBDataSource {\r\n    connection: string;\r\n\r\n    databaseName: string;\r\n    collectionName: string;\r\n\r\n    sqlCommand: string;\r\n}\r\n","import { BaseDataSource } from './base.dataSource.model';\r\n\r\nexport class MongoDBDataSource extends BaseDataSource {\r\n    connection: string;\r\n    connectionOptions: object;\r\n\r\n    databaseName: string;\r\n    collectionName: string;\r\n\r\n    find: string;\r\n    aggregatePipeLine: string;\r\n}\r\n","import { ParameterDetail } from './parameterDetail.model';\r\n\r\nexport class MySqlDataSource {\r\n    connection: string;\r\n    sqlCommand: string;\r\n\r\n    testCommand?: string;\r\n    isStoredProcedure?: boolean;\r\n\r\n    parameters?: ParameterDetail[];\r\n}\r\n","import { InputDetail } from './inputDetail.model';\r\nimport { CustomValidator } from './customValidator.model';\r\nimport { BaseEntity } from '../coreModels/baseEntity.model';\r\nexport const enum OrientationValues {\r\n    Vertical = 'vertical',\r\n    Horizontal = 'horizontal'\r\n}\r\n\r\nexport const enum InputLocations {\r\n    INLINE = 'inline',\r\n    MODAL = 'modal',\r\n    SIDEBARTOP = 'sidebartop',\r\n    SIDEBARRIGHT = 'sidebarright',\r\n    POPOUT = 'popout'\r\n}\r\n\r\nexport class InputBuilderDefinition extends BaseEntity {\r\n    // Title if required\r\n    title?: string;\r\n\r\n    // Arrange Controls\r\n    orientation?: OrientationValues;\r\n\r\n    // Width in Columns of each control group in horizontal mode\r\n    columnCount?: number;\r\n\r\n    // Text to show in OK Button. When empty button is hidden\r\n    okButtonText?: string;\r\n    okButtonIcon?: string;\r\n    okButtonCallBack?: (model: any) => void;\r\n\r\n    // Text to show in Cancel Button. When empty button is hidden\r\n    cancelButtonText?: string;\r\n    cancelButtonIcon?: string;\r\n    cancelButtonCallBack?: (model: any) => void;\r\n\r\n    // Array of input details to build in output\r\n    inputDetails?: InputDetail[];\r\n\r\n    // Where to display our input values in dashboard etc\r\n    inputLocation?: InputLocations;\r\n\r\n    // Load the content of any files into the inputModel\r\n    loadFileContent?: boolean;\r\n\r\n    // Custom Button\r\n    customButtonText?: string;\r\n    customButtonIcon?: string;\r\n    customButtonCallBack?: (model: any) => void;\r\n\r\n    width?: string;\r\n    height?: string;\r\n\r\n    customValidators?: CustomValidator[];\r\n}\r\n","import { BaseEntity } from '../coreModels/baseEntity.model';\r\nimport { ReferenceValueItem } from '../coreModels/referenceValue.model';\r\n\r\nexport class BaseInput {\r\n    name?: string;\r\n    label?: string;\r\n    type?: InputTypes;\r\n}\r\n\r\nexport enum InputTypes {\r\n    null = 'null',\r\n    textbox = 'textbox',\r\n    number = 'number',\r\n    email = 'email',\r\n    password = 'password',\r\n    textarea = 'textarea',\r\n    datetime = 'datetime',\r\n    date = 'date',\r\n    time = 'time',\r\n    select = 'select',\r\n    switch = 'switch',\r\n    editor = 'editor',\r\n    listbox = 'listbox',\r\n    colourpicker = 'colourpicker',\r\n    spinner = 'spinner',\r\n    slider = 'slider',\r\n    checkbox = 'checkbox',\r\n    tricheckbox = 'tricheckbox',\r\n    tree = 'tree',\r\n    selectbutton = 'selectbutton',\r\n    togglebutton = 'togglebutton',\r\n    radio = 'radio',\r\n    radiobuttons = 'radiobuttons',\r\n    dropdown = 'dropdown',\r\n    rating = 'rating',\r\n    autocomplete = 'autocomplete',\r\n    multiselect = 'multiselect',\r\n    chips = 'chips',\r\n    keyfilter = 'keyfilter',\r\n    fileattach = 'fileattach',\r\n    dynamic = 'dynamic',\r\n    search = 'search',\r\n    repeatform = 'repeatform'\r\n}\r\nexport class InputDetail extends BaseEntity {\r\n    label?: string;\r\n    type?: InputTypes;\r\n    placeholder?: string;\r\n    help?: string;\r\n    comparison?: string;\r\n    allowcomparisonchange?: string;\r\n    containerClass?: string; // Either full 12 cols or smaller if help present\r\n    classes?: string;\r\n    hidden?: boolean;\r\n    tabindex?: number;\r\n\r\n    readonly?: boolean;\r\n\r\n    // default value\r\n    // date: today, tomorrow, yesterday\r\n    value?: any;\r\n\r\n    validateRequired?: string; // Providing a message here infer Required\r\n    validateRequiredTrue?: string; // Providing a message here infer RequiredTrue\r\n\r\n    validateEmail?: string; // Providing a message here infer RequiredEmail\r\n\r\n    validatePattern?: string;\r\n    validatePatternMessage?: string;\r\n\r\n    validateMin?: number;\r\n    validateMinMessage?: string;\r\n\r\n    validateMax?: number;\r\n    validateMaxMessage?: string;\r\n\r\n    validateMinLength?: number;\r\n    validateMinLengthMessage?: string;\r\n\r\n    validateMaxLength?: number;\r\n    validateMaxLengthMessage?: string;\r\n}\r\n\r\nexport class InputDetailFile extends InputDetail {}\r\n\r\nexport class InputDetailTextBox extends InputDetail {\r\n    mask?: string; // 999-999\r\n}\r\n\r\nexport class InputDetailDateTime extends InputDetail {\r\n    forceUTC: boolean;\r\n}\r\n\r\nexport class InputDetailReferenceValues extends InputDetail {\r\n    referenceValueName?: string; // Used for select items\r\n    referenceValueSeedName?: string; // set to name, when changed use this value in search\r\n    referenceValueChildLevel?: number; // Where the Reference data contains children, which level down do we go\r\n    datasourceItems?: Array<ReferenceValueItem>; // Results of the datasource stored here for binding\r\n    referenceValueSeedDependency?: string; // Name of control to use as seed for this DataSource... Used linked Dropdowns\r\n}\r\n\r\nexport class InputDetailDropdown extends InputDetailReferenceValues {\r\n    selectFilter?: boolean; // Show Filter on Select Dropdown\r\n    selectFilterBy?: string; // Fields to filter by on Select DropDown\r\n    selectFilterPlaceholder?: string; // Placeholder for Filter input\r\n}\r\n\r\nexport class InputDetailToggleButton extends InputDetail {}\r\nexport class InputDetailTextArea extends InputDetail {\r\n    rows?: number; // Rows for TextArea\r\n}\r\n\r\nexport class InputDetailSlider extends InputDetail {\r\n    min?: number;\r\n    max?: number;\r\n    step?: number;\r\n}\r\n\r\nexport class InputAutoCompete extends InputDetailReferenceValues {}\r\n\r\nexport class FileAttach extends InputDetail {\r\n    // Pattern to restrict the allowed file types such as \"image/*\".\r\n    accept: string;\r\n    // Maximum file size allowed in bytes.\r\n    maxFileSize: number;\r\n}\r\n\r\nexport class InputDynamic extends InputDetail {\r\n    angularComponent?: string; // name of component to generate\r\n    additionalProperties?: object; // passed to components input\r\n}\r\n","export const enum NotificationTypes {\r\n    Email,\r\n    Socket,\r\n    Push\r\n}\r\n\r\nexport class NotifcationDetails {\r\n    name: string;\r\n    message: string;\r\n    triggerDataSourceName: string;\r\n    types: NotificationTypes[];\r\n\r\n    // Payload\r\n    data: object;\r\n\r\n    // Url etc\r\n    target: string;\r\n}\r\n","import { NotificationTypes } from './notificationDetails.model';\r\n\r\nexport class NotificationSentMessage {\r\n    notificationDetailsName: string;\r\n    userId: string;\r\n    type: NotificationTypes;\r\n\r\n    dateSent: Date;\r\n    dateRead: Date;\r\n\r\n    expires: Date;\r\n\r\n    // Payload\r\n    data: object;\r\n\r\n    // Url etc\r\n    target: string;\r\n}\r\n","export class NotifcationSubscriber {\r\n    userId: string;\r\n}\r\n","export class DeepCloneHelper {\r\n    public static getDeepCopy(obj) {\r\n        let copy;\r\n\r\n        // Handle the 3 simple types, and null or undefined\r\n        // tslint:disable-next-line: triple-equals\r\n        if (null == obj || 'object' != typeof obj) {\r\n            return obj;\r\n        }\r\n\r\n        // Handle Date\r\n        if (obj instanceof Date) {\r\n            copy = new Date();\r\n            copy.setTime(obj.getTime());\r\n            return copy;\r\n        }\r\n\r\n        // Handle Array\r\n        if (obj instanceof Array) {\r\n            copy = [];\r\n            for (let i = 0, len = obj.length; i < len; i++) {\r\n                copy[i] = DeepCloneHelper.getDeepCopy(obj[i]);\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        // Handle Object\r\n        if (obj instanceof Object) {\r\n            copy = {};\r\n            for (let attr in obj) {\r\n                if (attr !== 'component' && obj.hasOwnProperty(attr)) {\r\n                    copy[attr] = DeepCloneHelper.getDeepCopy(obj[attr]);\r\n                }\r\n            }\r\n            return copy;\r\n        }\r\n\r\n        throw new Error('Unable to copy obj! Its type is not supported.');\r\n    }\r\n}\r\n","export class ObjectPathHelper {\r\n    public static get(model: object, path: string) {\r\n        if (!path.includes('.')) {\r\n            return model[path];\r\n        } else {\r\n            return this.getNode(model, path);\r\n        }\r\n    }\r\n    public static set(model: object, path: string, value: any) {\r\n        if (!path.includes('.')) {\r\n            model[path] = value;\r\n        } else {\r\n            let prop = this.getNode(model, path);\r\n            prop = value;\r\n        }\r\n    }\r\n\r\n    private static getNode(model: object, path: string) {\r\n        const pathNodes = path.split('.');\r\n        let pointer = model;\r\n        pathNodes.forEach(nodeName => {\r\n            pointer = pointer[nodeName];\r\n        });\r\n        return pointer;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\n\n@NgModule({\n  declarations: [],\n  imports: [],\n})\nexport class ModelsModule {}\n","/*\n * Public API Surface of models\n */\n\nexport * from './lib/models/authModels/auth.requests';\nexport * from './lib/models/authModels/authUser.model';\nexport * from './lib/models/authModels/authUserResponse.model';\nexport * from './lib/models/authModels/IClient.model';\nexport * from './lib/models/authModels/IUser.model';\nexport * from './lib/models/authModels/role.model';\nexport * from './lib/models/authModels/changePassword.model';\n\nexport * from './lib/models/chartModels/chartDetail.model';\n\nexport * from './lib/models/coreModels/action.model';\nexport * from './lib/models/coreModels/actionRequest.model';\nexport * from './lib/models/coreModels/appSettings.model';\nexport * from './lib/models/coreModels/ApplicationLog.model';\nexport * from './lib/models/coreModels/auditLog.model';\nexport * from './lib/models/coreModels/baseEntity.model';\nexport * from './lib/models/coreModels/cacheEntry.model';\nexport * from './lib/models/coreModels/coreMenuItem.model';\nexport * from './lib/models/coreModels/error.model';\nexport * from './lib/models/coreModels/message.model';\nexport * from './lib/models/coreModels/referenceValue.model';\nexport * from './lib/models/coreModels/userPreference.model';\nexport * from './lib/models/coreModels/dataSource.request.model';\nexport * from './lib/models/coreModels/error.model';\nexport * from './lib/models/coreModels/environment.model';\n\nexport * from './lib/models/dashboardModels/dashboardDetails.model';\nexport * from './lib/models/dashboardModels/dashboardItem.model';\nexport * from './lib/models/dashboardModels/htmlContent.model';\nexport * from './lib/models/dashboardModels/widget.model';\nexport * from './lib/models/dashboardModels/widgetDetails.model';\n\nexport * from './lib/models/datagridModels/column.model';\nexport * from './lib/models/datagridModels/gridViewDetail.model';\n\nexport * from './lib/models/dataSourceModels/base.dataSource.model';\nexport * from './lib/models/dataSourceModels/dataResults.model';\nexport * from './lib/models/dataSourceModels/APILocation';\nexport * from './lib/models/dataSourceModels/parameterDetail.model';\nexport * from './lib/models/dataSourceModels/restApi.dataSource';\nexport * from './lib/models/dataSourceModels/sql.dataSource';\nexport * from './lib/models/dataSourceModels/documentDB.dataSource';\nexport * from './lib/models/dataSourceModels/mongoDB.dataSource';\nexport * from './lib/models/dataSourceModels/mySql.dataSource';\n\nexport * from './lib/models/inputBuilderModels/inputBuilderDefinition.model';\nexport * from './lib/models/inputBuilderModels/inputDetail.model';\nexport * from './lib/models/inputBuilderModels/customValidator.model';\n\nexport * from './lib/models/notificationModels/notificationDetails.model';\nexport * from './lib/models/notificationModels/notificationSent.model';\nexport * from './lib/models/notificationModels/notificationSubscriber.model';\n\nexport * from './lib/models/deepClone.helper';\nexport * from './lib/models/objectPath.helper';\nexport * from './lib/models/zuluDate.helper';\n\nexport * from './lib/models.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}